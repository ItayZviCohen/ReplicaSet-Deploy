---

- name: Owner user checks
  block:
    - name: Fetch whether the Ops Manager user exists
      uri:
        url: "{{ ops_manager_url }}/api/public/v1.0/users/byName/{{ ops_manager_project_owner }}"
        user: "{{ ops_manager_admin_public_key }}"
        password: "{{ ops_manager_admin_private_key }}"
        method: GET
        body_format: json
        status_code: 202,200,201
        return_content: true
      register: ops_manager_owner_user_exists
      failed_when: "ops_manager_owner_user_exists.status not in [200,201,202] and ops_manager_owner_user_exists.json.errorCode != 'USERNAME_NOT_FOUND'"
    - name: Assert that the user does exist
      assert:
        that:
          - "ops_manager_owner_user_exists.json.errorCode is not defined"
        msg: "Please create your user at {{ ops_manager_url }}"
  when: "ops_manager_project_owner is defined and (ops_manager_project_owner | length) > 0"
        

- name: Check if the replica set already exists
  k8s_info:
    host: "{{ k8s_api_url }}"
    api_version: v1
    kind: MongoDB
    name: "{{ mongodb_replicaset_name }}"
    namespace: "{{ k8s_namespace }}"
    api_key: "{{ k8s_api_key }}"
    verify_ssl: no
  register: mongodb_replicaset_details

- name: Deploy the replica set if not already exists and needs to be present
  include_tasks: deploy.yml
  when: "( mongodb_replicaset_details.resources | length ) == 0 and state == 'present'"

- name: Update the replica set if already exixts and needs to be present
  include_tasks: patch.yml
  when: "( mongodb_replicaset_details.resources | length ) > 0 and state == 'present'"

- name: Check if resource is in running state
  k8s_info:
    host: "{{ k8s_api_url }}"
    api_version: v1
    kind: MongoDB
    name: "{{ mongodb_replicaset_name }}"
    namespace: "{{ k8s_namespace }}"
    api_key: "{{ k8s_api_key }}"
    verify_ssl: no
  register: mongodb_replicaset_phase
  retries: 150
  delay: 10
  until: "mongodb_replicaset_phase.resources[0].status.phase == 'Running'"

- name: Add project owner privileges to {{ ops_manager_project_owner | default('none') }} if the project just got created
  include_tasks: assign_owner.yml
  when: "ops_manager_project_owner is defined and (ops_manager_project_owner | length) > 0"

- name: Enable continuous backup For the project
  include_tasks: enable_backup.yml
  when: "(mongodb_replicaset_backup | bool)"
